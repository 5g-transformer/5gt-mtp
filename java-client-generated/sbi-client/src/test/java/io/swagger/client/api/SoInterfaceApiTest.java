/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import com.mtp.extinterface.nbi.swagger.model.AllocateComputeRequest;
import com.mtp.extinterface.nbi.swagger.model.AllocateNetworkRequest;
import com.mtp.extinterface.nbi.swagger.model.AllocateNetworkResult;
import com.mtp.extinterface.nbi.swagger.model.AppD;
import com.mtp.extinterface.nbi.swagger.model.Filter;
import com.mtp.extinterface.nbi.swagger.model.InlineResponse2003;
import com.mtp.extinterface.nbi.swagger.model.InterNfviPopConnectivityRequest;
import com.mtp.extinterface.nbi.swagger.model.OperateComputeRequest;
import com.mtp.extinterface.nbi.swagger.model.VirtualCompute;
import com.mtp.extinterface.nbi.swagger.model.VirtualNetwork;
import io.swagger.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.List;

/**
 * API tests for SoInterfaceApi
 */
@Ignore
public class SoInterfaceApiTest {

    private final SoInterfaceApi api = new SoInterfaceApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void abstractOperateComputeTest() throws ApiException {
        OperateComputeRequest body = null;
        VirtualCompute response = api.abstractOperateCompute(body);

        // TODO: test validations
    }
    
    /**
     * Allocate abstract compute resources
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void allocateAbstractComputeTest() throws ApiException {
        AllocateComputeRequest body = null;
        VirtualCompute response = api.allocateAbstractCompute(body);

        // TODO: test validations
    }
    
    /**
     * Retrieve aggregated Cloud NFVI-PoP and Inter-NFVI-PoP Connectivity
     *
     * Retrieve aggregated Cloud NFVI-PoP and Inter-NFVI-PoP Connectivity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void collectMtpCloudNetworkResourceInformationTest() throws ApiException {
        InlineResponse2003 response = api.collectMtpCloudNetworkResourceInformation();

        // TODO: test validations
    }
    
    /**
     * Create inter-NFVI-PoP connectivity
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createInterNfviPoPConnectivityTest() throws ApiException {
        InterNfviPopConnectivityRequest body = null;
        List<Object> response = api.createInterNfviPoPConnectivity(body);

        // TODO: test validations
    }
    
    /**
     * Delete inter-NFVI-PoP connectivity
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInterNfviPoPConnectivityTest() throws ApiException {
        List<String> computeId = null;
        api.deleteInterNfviPoPConnectivity(computeId);

        // TODO: test validations
    }
    
    /**
     * Retrieve information about a specific application package.
     *
     * Retrieve information about a specific application package.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void mecappOnboardAppDIdGetTest() throws ApiException {
        String appDId = null;
        AppD response = api.mecappOnboardAppDIdGet(appDId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a list of onboarded application packages.
     *
     * Retrieve a list of onboarded application packages.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void mecappOnboardGetTest() throws ApiException {
        List<AppD> response = api.mecappOnboardGet();

        // TODO: test validations
    }
    
    /**
     * Terminate abstract compute resources
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void terminateResourcesTest() throws ApiException {
        List<String> computeId = null;
        List<String> response = api.terminateResources(computeId);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vIMallocateNetworkTest() throws ApiException {
        AllocateNetworkRequest params = null;
        AllocateNetworkResult response = api.vIMallocateNetwork(params);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vIMqueryNetworksTest() throws ApiException {
        Filter networkQueryFilter = null;
        List<VirtualNetwork> response = api.vIMqueryNetworks(networkQueryFilter);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vIMterminateNetworksTest() throws ApiException {
        List<String> networkResourceId = null;
        List<String> response = api.vIMterminateNetworks(networkResourceId);

        // TODO: test validations
    }
    
}
