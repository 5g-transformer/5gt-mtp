/*
 * MTP Manager API
 * MTP Manager API
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import com.mtp.extinterface.nbi.swagger.model.AllocateParameters;
import com.mtp.extinterface.nbi.swagger.model.AllocateReply;
import com.mtp.extinterface.nbi.swagger.model.Filter;
import com.mtp.extinterface.nbi.swagger.model.InlineResponse2002;
import com.mtp.extinterface.nbi.swagger.model.NetworkIds;
import com.mtp.extinterface.nbi.swagger.model.VirtualNetwork;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WimNetworkResourcesApi
 */
@Ignore
public class WimNetworkResourcesApiTest {

    private final WimNetworkResourcesApi api = new WimNetworkResourcesApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void allocateNetworkTest() throws ApiException {
        AllocateParameters params = null;
        AllocateReply response = api.allocateNetwork(params);

        // TODO: test validations
    }
    
    /**
     * Retrieve aggregated WAN Connectivity
     *
     * Retrieve aggregated WAN Connectivity
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void collectWimAbstractedInformationTest() throws ApiException {
        InlineResponse2002 response = api.collectWimAbstractedInformation();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void queryNetworksTest() throws ApiException {
        Filter networkQueryFilter = null;
        List<VirtualNetwork> response = api.queryNetworks(networkQueryFilter);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void terminateNetworksTest() throws ApiException {
        String networkId = null;
        List<NetworkIds> response = api.terminateNetworks(networkId);

        // TODO: test validations
    }
    
}
